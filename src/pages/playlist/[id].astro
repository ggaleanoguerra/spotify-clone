---
import Layout from "../../layouts/Layout.astro";
import Greetings from "../../components/Greetings.astro";
import { onMount } from "solid-js";
const { id } = Astro.params;
let playlistData: {
  name: string;
  tracks: {
    items: {
      track: {
        id: string;
        name: string;
        album: { images: { url: string }[] };
        artists: { name: string }[];
      };
    }[];
  };
} = { name: "", tracks: { items: [] } };
onMount(async () => {
  const tokenCookie = document.cookie
    .split("; ")
    .find((row) => row.startsWith("access_token"));
  const token = tokenCookie ? tokenCookie.split("=")[1] : null;

  const response = await fetch(`https://api.spotify.com/v1/playlists/${id}`, {
    headers: { Authorization: `Bearer ${token}` },
  });

  if (response.ok) {
    playlistData = await response.json();
    console.log(playlistData);
  } else {
    console.error("Error al obtener la playlist");
  }
});
---

<Layout title="Spotify clone by ggaleanoguerra">
  <div class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
  transition:name=`playlist ${id} box`>
    <div class="relative z-10 px6 m-4">
       <Greetings />
      <h1>{playlistData ? playlistData.name : "Cargando..."}</h1>
      {
        playlistData && (
          <ul>
            {playlistData.tracks.items.map((track) => (
              <li id={track.track.id}>
                <img
                  src={track.track.album.images[0].url}
                  alt={track.track.name}
                />
                <p>
                  {track.track.name} -{" "}
                  {track.track.artists.map((artist) => artist.name).join(", ")}
                </p>
              </li>
            ))}
          </ul>
        )
      }
    </div>
    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 rounded-md"
    >
    </div>
  </div>
</Layout>
